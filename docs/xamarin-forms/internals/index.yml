### YamlMime:YamlDocument
documentType: LandingData
title: 高度な概念と内部構造
metadata:
  title: 高度な概念と内部構造
  description: Xamarin.Forms の高度な概念と内部構造について説明します。
  ms.topic: landing-page
  ms.prod: xamarin
  ms.assetid: 2273a31c-4022-42ba-befe-0d23ce2ff3b5
  author: davidbritch
  ms.author: dabritch
  ms.date: 08/09/2019
abstract:
  description: Xamarin.Forms の高度な概念と内部構造について説明します。
sections:
  - title: null
    items:
      - type: list
        style: cards
        className: cardsB
        items:
          - href: class-hierarchy.md
            html: Xamarin. Forms アプリケーションのユーザー インターフェイスの作成に使用される型の階層について説明します。
            image:
              src: 'https://docs.microsoft.com/media/common/i_class.svg'
              href: class-hierarchy.md
            title: コントロール クラスの階層構造
          - href: net-standard.md
            html: .NET Standard 2.0 を使用するように Xamarin.Forms アプリケーションを変換する方法について説明します。
            image:
              src: 'https://docs.microsoft.com/media/logos/logo_NETstandard.svg'
              href: net-standard.md
            title: .NET Standard
          - href: fast-renderers.md
            html: 高速レンダラーについて説明します。これは、結果として生じるネイティブのコントロール階層をフラット化することで、Android 上の Xamarin.Forms コントロールの増加を抑制し、レンダリング コストを削減します。
            image:
              src: 'https://docs.microsoft.com/media/common/i_code-performance.svg'
              href: fast-renderers.md
            title: 高速レンダラー
          - href: dependency-resolution.md
            html: Xamarin.Forms に依存関係の解決方法を挿入して、カスタム レンダラー、エフェクト、DependencyService の実装の作成と有効期間をアプリケーションで制御できるようにする方法について説明します。
            image:
              src: 'https://docs.microsoft.com/media/common/i_architecture.svg'
              href: dependency-resolution.md
            title: 依存関係の解決